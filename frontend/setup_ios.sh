#!/bin/bash

# Script de Setup para iOS - Projeto Flutter
# Este script automatiza a prepara√ß√£o do projeto para iOS

set -e  # Para em caso de erro

echo "üöÄ Iniciando setup do projeto para iOS..."
echo ""

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fun√ß√£o para imprimir com cor
print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

# Verificar se est√° no diret√≥rio correto
if [ ! -f "pubspec.yaml" ]; then
    print_error "Este script deve ser executado na pasta 'frontend' do projeto!"
    exit 1
fi

print_info "Diret√≥rio correto detectado."
echo ""

# 1. Verificar Flutter
echo "üì¶ Verificando instala√ß√£o do Flutter..."
if ! command -v flutter &> /dev/null; then
    print_error "Flutter n√£o encontrado! Instale o Flutter primeiro."
    exit 1
fi
print_success "Flutter instalado: $(flutter --version | head -n 1)"
echo ""

# 2. Verificar CocoaPods
echo "üç´ Verificando instala√ß√£o do CocoaPods..."
if ! command -v pod &> /dev/null; then
    print_warning "CocoaPods n√£o encontrado!"
    print_info "Instalando CocoaPods..."
    sudo gem install cocoapods
    print_success "CocoaPods instalado!"
else
    print_success "CocoaPods instalado: $(pod --version)"
fi
echo ""

# 3. Limpar builds anteriores
echo "üßπ Limpando builds anteriores..."
flutter clean
print_success "Build limpo!"
echo ""

# 4. Obter depend√™ncias Flutter
echo "üì• Obtendo depend√™ncias do Flutter..."
flutter pub get
print_success "Depend√™ncias obtidas!"
echo ""

# 5. Verificar se Podfile existe
if [ ! -f "ios/Podfile" ]; then
    print_error "Podfile n√£o encontrado em ios/!"
    print_info "O Podfile deveria ter sido criado pela an√°lise."
    exit 1
fi
print_success "Podfile encontrado!"
echo ""

# 6. Instalar pods do iOS
echo "üì≤ Instalando pods do iOS (pode demorar alguns minutos)..."
cd ios
rm -rf Pods Podfile.lock  # Limpa instala√ß√£o anterior
pod repo update  # Atualiza reposit√≥rio de pods
pod install
cd ..
print_success "Pods instalados!"
echo ""

# 7. Verificar dispositivos iOS dispon√≠veis
echo "üì± Verificando dispositivos iOS dispon√≠veis..."
flutter devices
echo ""

# 8. Instru√ß√µes finais
echo ""
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
print_success "Setup conclu√≠do com sucesso!"
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
echo ""
print_info "Pr√≥ximos passos:"
echo ""
echo "1Ô∏è‚É£  Abrir projeto no Xcode:"
echo "   $ open ios/Runner.xcworkspace"
echo ""
echo "2Ô∏è‚É£  No Xcode, configurar:"
echo "   - Signing & Capabilities > Team (selecionar sua conta Apple)"
echo "   - General > Bundle Identifier (mudar para algo √∫nico)"
echo ""
echo "3Ô∏è‚É£  Configurar API no app:"
echo "   - Descobrir seu IP local"
echo "   - Rodar Django: python manage.py runserver 0.0.0.0:8000"
echo "   - No app: Configura√ß√µes > Host > [SEU_IP]"
echo ""
echo "4Ô∏è‚É£  Executar:"
echo "   $ flutter run -d ios"
echo ""
print_warning "IMPORTANTE: No iOS real, n√£o use 127.0.0.1 - use seu IP da rede local!"
echo ""
print_info "Leia GUIA_RAPIDO_IOS.md para instru√ß√µes detalhadas."
echo ""








